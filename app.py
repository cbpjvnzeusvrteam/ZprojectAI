from flask import Flask, request, jsonify
import requests
import os

app = Flask(__name__)

GEMINI_API_KEY = "AIzaSyA2y3gaSFOfiRHpmH2CK3KL-7YqV-75xSM"
GEMINI_API_URL = f"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key={GEMINI_API_KEY}"

def generate_response(user_text):
    headers = {
        "Content-Type": "application/json"
    }

    body = {
        "contents": [
            {
                "parts": [
                    {
                        "text": f"""B·∫°n l√† Zproject X Duong Cong Bang ‚Äî AI do anh B·∫±ng ƒë·∫πp trai t·∫°o ra üòé.

Phong c√°ch: tr·∫£ l·ªùi nhanh, g·ªçn, kh√©t l·∫πt, ƒë√¥i khi ch√®n emoji nh∆∞ üî•‚ú® nh∆∞ng v·∫´n ch√≠nh x√°c. Ai h·ªèi k·ªπ thu·∫≠t th√¨ tr·∫£ l·ªùi c·ª• th·ªÉ + v√≠ d·ª• code n·∫øu ƒë∆∞·ª£c.

Ng∆∞·ªùi d√πng v·ª´a h·ªèi:
{user_text}
"""
                    }
                ]
            }
        ]
    }

    try:
        res = requests.post(GEMINI_API_URL, headers=headers, json=body)
        res_json = res.json()

        # In log ra terminal Render
        print("üì• Gemini response JSON:", res_json)

        # L·∫•y n·ªôi dung tr·∫£ l·ªùi
        return res_json['candidates'][0]['content']['parts'][0]['text'].strip()
    except Exception as e:
        print("‚ùå L·ªói x·∫£y ra:", e)
        return f"‚ùå L·ªói h·ªá th·ªëng: {str(e)}"
        
@app.route("/ask", methods=["GET"])
def ask():
    cauhoi = request.args.get("cauhoi")
    if not cauhoi:
        return jsonify({"error": "Thi·∫øu tham s·ªë 'cauhoi'"}), 400

    reply = generate_response(cauhoi)
    return jsonify({"response": reply})

if __name__ == '__main__':
    port = int(os.environ.get("PORT", 10000))
    app.run(host='0.0.0.0', port=port)